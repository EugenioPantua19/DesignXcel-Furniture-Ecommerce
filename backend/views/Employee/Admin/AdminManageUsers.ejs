<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Users - Design Excellence</title>
    <link rel="stylesheet" href="/css/Employee/Admin/AdminIndexStyles.css">
    <style>
        /* General table styling */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
            margin-bottom: 30px;
        }
        th,
        td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            color: #333;
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #e9e9e9;
        }

        .manage-users-section {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        .manage-users-section h3 {
            color: #333;
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 1.5em;
            padding-bottom: 10px;
        }

        .manage-users-section table th {
            background-color: #f2f2f2;
            color: #333;
        }

        /* Sidebar submenu and section label styles */
        .sidebar-section-label {
            color: #fff;
            font-weight: bold;
            padding: 12px 18px 6px 18px;
            background: #333;
            border-top: 1px solid #444;
            border-bottom: none;
            margin-top: 2px;
            margin-bottom: 0;
            font-size: 1.08em;
        }
        .sidebar-submenu {
            list-style: none;
            margin: 0 0 0 0;
            padding: 0 0 0 18px;
            background: #444;
        }
        .sidebar-submenu li a {
            color: #fff;
            display: block;
            padding: 10px 0 10px 10px;
            text-decoration: none;
            font-size: 1em;
            border-bottom: 1px solid #555;
            transition: background 0.2s;
        }
        .sidebar-submenu li a:hover {
            background: #555;
        }

        .edit-user-btn {
            background-color: #FFC107;
            color: #222;
            border: none;
            border-radius: 5px;
            padding: 6px 16px;
            font-size: 1em;
            font-weight: 400;
            cursor: pointer;
            margin-right: 7px;
            transition: background-color 0.2s;
        }
        .edit-user-btn:hover, .edit-user-btn:focus {
            background-color: #e0ac06;
            color: #111;
        }
        /* Delete functionality removed for security */

        .access-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 6px 12px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9em;
            margin-left: 5px;
            transition: background-color 0.3s;
        }
        
        .access-btn:hover {
            background-color: #0056b3;
        }
        
        .access-dropdown-content {
            display: none;
            position: absolute;
            background-color: #000;
            min-width: 200px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
            border-radius: 4px;
            right: 0;
            top: 100%;
        }
        
        .access-dropdown-content a {
            color: white;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            transition: background-color 0.3s;
            border-bottom: 1px solid #333;
        }
        
        .access-dropdown-content a:hover {
            background-color: #333;
            color: white;
        }
        
        .access-dropdown-content a:first-child {
            border-top-left-radius: 4px;
            border-top-right-radius: 4px;
        }
        
        .access-dropdown-content a:last-child {
            border-bottom-left-radius: 4px;
            border-bottom-right-radius: 4px;
            border-bottom: none;
        }

        /* Permission Management Styles */
        .permission-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .permission-modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .permission-modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #ddd;
        }

        .permission-modal-header h3 {
            margin: 0;
            color: #333;
        }

        .close {
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: #000;
        }

        .permission-section {
            margin-bottom: 15px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: #f9f9f9;
        }

        .permission-section label {
            display: flex;
            align-items: center;
            cursor: pointer;
            font-weight: 500;
        }

        .permission-section input[type="checkbox"] {
            margin-right: 10px;
            transform: scale(1.2);
        }

        .permission-actions {
            margin-top: 20px;
            text-align: right;
        }

        .permission-actions button {
            margin-left: 10px;
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }

        .save-permissions {
            background-color: #007bff;
            color: white;
        }

        .save-permissions:hover {
            background-color: #0056b3;
        }

        .cancel-permissions {
            background-color: #6c757d;
            color: white;
        }

        .cancel-permissions:hover {
            background-color: #545b62;
        }
        
        .permission-buttons {
            display: flex;
            gap: 5px;
            margin-top: 8px;
        }
        
        .permission-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 4px 8px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 0.8em;
            transition: background-color 0.3s;
        }
        
        .permission-btn:hover {
            background-color: #0056b3;
        }
        
        .permission-btn.view-only {
            background-color: #28a745;
        }
        
        .permission-btn.view-only:hover {
            background-color: #1e7e34;
        }
        
        .permission-btn.no-access {
            background-color: #dc3545;
        }
        
        .permission-btn.no-access:hover {
            background-color: #c82333;
        }

        .access-modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0,0,0,0.4);
            z-index: 9999;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .access-modal {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.18);
            padding: 32px 32px 24px 32px;
            min-width: 320px;
            max-width: 95vw;
            width: 400px;
            position: relative;
            animation: fadeIn 0.2s;
        }
        .access-modal-close {
            position: absolute;
            top: 12px;
            right: 18px;
            font-size: 1.7em;
            color: #888;
            background: none;
            border: none;
            cursor: pointer;
        }
        .access-modal-close:hover {
            color: #c00;
        }
        .access-modal-section {
            margin-bottom: 18px;
            border-bottom: 1px solid #eee;
            padding-bottom: 10px;
        }
        .access-modal-section:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }
        .access-modal-section-title {
            font-weight: bold;
            color: #222;
            margin-bottom: 8px;
        }
        
        /* Permission Management Styles */
        .permission-section {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }
        
        .permission-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 15px;
        }
        
        .permission-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            background: #f9f9f9;
        }
        
        .permission-card h4 {
            margin: 0 0 10px 0;
            color: #333;
            font-size: 1.1em;
        }
        
        .permission-checkbox {
            display: flex;
            align-items: center;
            margin: 8px 0;
        }
        
        .permission-checkbox input[type="checkbox"] {
            margin-right: 8px;
            transform: scale(1.2);
        }
        
        .permission-checkbox label {
            font-size: 0.95em;
            color: #555;
            cursor: pointer;
        }
        
        .save-permissions-btn {
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 1em;
            cursor: pointer;
            margin-top: 15px;
        }
        
        .save-permissions-btn:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <%
        // Ensure userRole is defined with a fallback
        if (typeof userRole === 'undefined') {
            userRole = user && user.role ? user.role : 'Guest';
        }
    %>
    <div class="dashboard-container">
        <!-- Sidebar content -->
        <div class="sidebar">
            <div class="sidebar-header">
                <h3>Admin Panel</h3>
            </div>
            <ul class="sidebar-menu">
                <li><a href="/Employee/AdminIndex">Dashboard</a></li>
                <li class="sidebar-section-label" style="font-weight:normal;">Inventory</li>
                <ul class="sidebar-submenu" style="display:block;">
                    <li><a href="/Employee/Admin/Products">Products</a></li>
                    <li><a href="/Employee/Admin/RawMaterials">Raw Materials</a></li>
                    <li><a href="/Employee/Admin/Alerts">Alerts</a></li>
                    <li><a href="/Employee/Admin/Archived">Archived items</a></li>
                </ul>
                <li class="sidebar-section-label" style="font-weight:normal;">Transactions</li>
                <ul class="sidebar-submenu" style="display:block;">
                    <li><a href="/Employee/Admin/DeliveryRates">Delivery Rates</a></li>
                    <li><a href="/Employee/Admin/WalkIn">Walk In</a></li>
                    <li><a href="/Employee/Admin/OrdersPending">Orders Pending</a></li>
                    <li><a href="/Employee/Admin/OrdersProcessing">Orders Processing</a></li>
                    <li><a href="/Employee/Admin/OrdersShipping">Orders Shipping</a></li>
                    <li><a href="/Employee/Admin/OrdersDelivery">Orders Delivery</a></li>
                    <li><a href="/Employee/Admin/OrdersReceive">Orders Receive</a></li>
                    <li><a href="/Employee/Admin/CancelledOrders">Cancelled Orders</a></li>
                    <li><a href="/Employee/Admin/CompletedOrders">Completed Orders</a></li>
                </ul>
                <li><a href="/Employee/Admin/ManageUsers">Manage Users</a></li>
                <li><a href="/Employee/Admin/ChatSupport">Chat Support</a></li>
                <li><a href="/Employee/Admin/CMS">Content Management</a></li>
                <li><a href="/Employee/Admin/Reviews">Customer Reviews</a></li>
                <li><a href="/Employee/Admin/Logs">Activity Logs</a></li>
            </ul>
        </div>

        <div class="main-content">
            <div class="header">
                <h2>Manage Users</h2>
            </div>
            <div class="content-area">
                <div class="manage-users-section">
                    <h3>Admin Accounts</h3>
                    <table id="adminAccountsTable">
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>Username</th>
                                <th>Full Name</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Status</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (users && users.length > 0 && users.some(u => u.RoleName === 'Admin')) { %>
                                <% users.filter(user => user.RoleName === 'Admin').forEach(function(user) { %>
                                    <tr>
                                        <td><%= user.UserID %></td>
                                        <td><%= user.Username %></td>
                                        <td><%= user.FullName %></td>
                                        <td><%= user.Email %></td>
                                        <td><%= user.RoleName %></td>
                                        <td><%= user.IsActive ? 'Active' : 'Inactive' %></td>
                                        <td><%= user.CreatedAt ? new Date(user.CreatedAt).toLocaleDateString() : 'N/A' %></td>
                                        <td>
                                            <button class="edit-user-btn"
                                                data-userid="<%= user.UserID %>"
                                                data-username="<%= user.Username %>"
                                                data-fullname="<%= user.FullName %>"
                                                data-email="<%= user.Email %>"
                                                data-roleid="<%= user.RoleID %>"
                                                data-isactive="<%= user.IsActive ? 1 : 0 %>"
                                                title="Edit"
                                            >
                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 20h9"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16.5 3.5a2.121 2.121 0 113 3L7 19.5 3 21l1.5-4L16.5 3.5z"/></svg>
                                            </button>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr><td colspan="8">No admin accounts found.</td></tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                <div class="manage-users-section">
                    <h3>Employee Accounts</h3>
                    <table id="employeeAccountsTable">
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>Username</th>
                                <th>Full Name</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Status</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (users && users.length > 0 && users.some(u => u.RoleName !== 'Admin')) { %>
                                <% users.filter(user => user.RoleName !== 'Admin').forEach(function(user) { %>
                                    <tr>
                                        <td><%= user.UserID %></td>
                                        <td><%= user.Username %></td>
                                        <td><%= user.FullName %></td>
                                        <td><%= user.Email %></td>
                                        <td><%= user.RoleName %></td>
                                        <td><%= user.IsActive ? 'Active' : 'Inactive' %></td>
                                        <td><%= user.CreatedAt ? new Date(user.CreatedAt).toLocaleDateString() : 'N/A' %></td>
                                        <td>
                                            <button class="edit-user-btn"
                                                data-userid="<%= user.UserID %>"
                                                data-username="<%= user.Username %>"
                                                data-fullname="<%= user.FullName %>"
                                                data-email="<%= user.Email %>"
                                                data-roleid="<%= user.RoleID %>"
                                                data-isactive="<%= user.IsActive ? 1 : 0 %>"
                                                title="Edit"
                                            >
                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 20h9"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16.5 3.5a2.121 2.121 0 113 3L7 19.5 3 21l1.5-4L16.5 3.5z"/></svg>
                                            </button>
                                            <% if (typeof locals.userRole !== 'undefined' && locals.userRole === 'Admin') { %>
                                                <button class="access-btn" onclick="showAccessModal(<%= user.UserID %>)">Access</button>
                                            <% } %>
                                            <button class="toggle-btn"
                                                onclick="toggleUserStatus(<%= user.UserID %>, <%= user.IsActive ? 0 : 1 %>)"
                                                style="background-color: <%= user.IsActive ? '#dc3545' : '#28a745' %>; color: white; border: none; padding: 6px 12px; border-radius: 4px; cursor: pointer; font-size: 0.9em; margin-left: 5px;">
                                            >
                                                <%= user.IsActive ? 'Deactivate' : 'Activate' %>
                                            </button>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr><td colspan="8">No employee accounts found.</td></tr>
                            <% } %>
                        </tbody>
                    </table>
                    <p id="noEmployeeAccounts" style="display:none;">No employee accounts found.</p>
                </div>

                <div class="manage-users-section">
                    <h3>Customer Accounts</h3>
                    <table id="customerAccountsTable">
                        <thead>
                            <tr>
                                <th>Customer ID</th>
                                <th>Full Name</th>
                                <th>Email</th>
                                <th>Phone Number</th>
                                <th>Status</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Customer data will be loaded here by JavaScript -->
                        </tbody>
                    </table>
                    <p id="noCustomerAccounts" style="display:none;">No customer accounts found.</p>
                </div>

                <!-- Permission Management Section -->
                <div class="permission-section">
                    <h3>Role Permission Management</h3>
                    <p>Configure which sections each role can access. Use the "Access" button next to each user to manage their individual permissions.</p>
                    
                    <div class="permission-grid">
                        <div class="permission-card">
                            <h4>Current Permission Status</h4>
                            <p style="color: #666; font-size: 0.9em; margin-bottom: 15px;">
                                Individual user permissions are managed per user. Click "Access" next to any user to modify their permissions.
                            </p>
                            
                            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px;">
                                <div style="padding: 10px; background: #f8f9fa; border-radius: 4px; border-left: 4px solid #28a745;">
                                    <strong style="color: #28a745;">✅ Available Sections:</strong>
                                    <ul style="margin: 5px 0 0 15px; font-size: 0.9em;">
                                        <li>User Management</li>
                                        <li>Inventory Management</li>
                                        <li>Transaction Management</li>
                                        <li>Order Management</li>
                                        <li>Chat Support</li>
                                        <li>Content Management</li>
                                        <li>Activity Logs</li>
                                    </ul>
                                </div>
                                
                                <div style="padding: 10px; background: #fff3cd; border-radius: 4px; border-left: 4px solid #ffc107;">
                                    <strong style="color: #856404;">⚠️ Permission System:</strong>
                                    <ul style="margin: 5px 0 0 15px; font-size: 0.9em;">
                                        <li>Admin: Full access to all sections</li>
                                        <li>Other roles: Access granted per user</li>
                                        <li>Default: No access unless granted</li>
                                        <li>Security: Deny by default</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div style="margin-top: 20px; padding: 15px; background-color: #d1ecf1; border-left: 4px solid #17a2b8; border-radius: 4px;">
                        <h4 style="margin: 0 0 10px 0; color: #0c5460;">How to Manage Permissions</h4>
                        <ol style="margin: 10px 0 0 20px; color: #0c5460;">
                            <li>Find the user in the table above</li>
                            <li>Click the "Access" button next to their name</li>
                            <li>Check/uncheck the sections they should access</li>
                            <li>Click "Save Permissions" to apply changes</li>
                        </ol>
                        <p style="margin: 10px 0 0 0; color: #0c5460; font-size: 0.9em;">
                            <strong>Note:</strong> Only Admin users can modify permissions. Each user's access is controlled individually.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit User Modal -->
    <div id="editUserModal" class="modal" style="display:none;">
        <div class="modal-content" style="max-width: 420px;">
            <span class="close-button" id="closeEditUserModal" style="float:right;cursor:pointer;font-size:1.5em;">&times;</span>
            <h3>Edit User</h3>
            <form id="editUserForm" method="POST" action="/Employee/Admin/Users/Edit">
                <input type="hidden" id="editUserID" name="userId">
                <label for="editUsername">Username:</label>
                <input type="text" id="editUsername" name="username" required><br><br>
                <label for="editFullName">Full Name:</label>
                <input type="text" id="editFullName" name="fullName" required><br><br>
                <label for="editEmail">Email:</label>
                <input type="email" id="editEmail" name="email" required><br><br>
                <label for="editRole">Role:</label>
                <select id="editRole" name="roleId" required>
                    <option value="1">InventoryManager</option>
                    <option value="2">TransactionManager</option>
                    <option value="3">UserManager</option>
                    <option value="8">OrderSupport</option>
                    <option value="5">Admin</option>
                </select><br><br>
                <label for="editIsActive">Status:</label>
                <select id="editIsActive" name="isActive" required>
                    <option value="1">Active</option>
                    <option value="0">Inactive</option>
                </select><br><br>
                <button type="submit">Save Changes</button>
                <button type="button" id="cancelEditUser">Cancel</button>
            </form>
        </div>
    </div>

    <!-- Custom Success Popup -->
    <div id="customPopup" class="custom-popup" style="display:none;position:fixed;top:20px;right:20px;background-color:#4CAF50;color:white;padding:15px 25px;border-radius:8px;box-shadow:0 4px 12px rgba(0,0,0,0.15);z-index:1000;max-width:300px;">
        <div class="custom-popup-content" style="display:flex;align-items:center;gap:12px;">
            <span class="custom-popup-icon" style="font-size:24px;">✓</span>
            <span class="custom-popup-message" style="font-size:14px;line-height:1.4;"></span>
        </div>
    </div>

    <script src="/js/Employee/Admin/AdminManageUsers.js"></script>
    <script>
        // Pass users data to JavaScript
        const users = <%- JSON.stringify(users) %>;
        console.log('Users data loaded:', users);
        console.log('First user permissions:', users[0]?.permissions);
        
        // Ensure setPermission is defined globally
        if (typeof setPermission !== 'function') {
            function setPermission(section, permission, userId) {
                // Placeholder: implement permission saving logic here
                console.log(`Set ${section} permission to ${permission} for user ${userId}`);
            }
        }

        async function fetchUserPermissions(userId) {
            try {
                const response = await fetch(`/Employee/Admin/ManageUsers/GetPermissions/${userId}`);
                const data = await response.json();
                console.log('Fetched permissions from server:', data);
                return data.success ? data.permissions : {};
            } catch (error) {
                console.error('Error fetching permissions:', error);
                return {};
            }
        }

        async function showAccessModal(userId) {
            console.log('Opening permission modal for user:', userId);
            console.log('Available users data:', users);
            
            // Find the user data from the button
            const userButton = document.querySelector(`button[data-userid="${userId}"]`);
            if (!userButton) {
                console.error('User button not found for userId:', userId);
                return;
            }
            
            const username = userButton.getAttribute('data-username');
            const fullName = userButton.getAttribute('data-fullname');
            
            // Get current permissions for this user
            let userData = users.find(u => u.UserID == userId || u.UserID == parseInt(userId));
            let currentPermissions = userData ? userData.permissions : {};
            
            // Always fetch fresh permissions from server to ensure accuracy
            console.log('Fetching fresh permissions from server...');
            currentPermissions = await fetchUserPermissions(userId);
            
            console.log('User data found:', userData);
            console.log('Current permissions:', currentPermissions);
            console.log('All users data:', users);
            console.log('Looking for userId:', userId, 'type:', typeof userId);
            
            // Build permission modal content
            let permissionContent = `
                <h4>Manage Permissions for ${fullName} (${username})</h4>
                <form id="permissionForm">
                    <input type="hidden" id="permissionUserId" value="${userId}">
            `;
            
            // Add permission sections
            const sections = [
                { key: 'users', name: 'User Management' },
                { key: 'inventory', name: 'Inventory Management' },
                { key: 'transactions', name: 'Transaction Management' },
                { key: 'orders', name: 'Order Management' },
                { key: 'chat', name: 'Chat Support' },
                { key: 'content', name: 'Content Management' }
            ];
            
            sections.forEach(section => {
                const permissionValue = currentPermissions[section.key];
                const isChecked = (permissionValue === true || permissionValue === 1) ? 'checked' : '';
                console.log(`Setting checkbox for ${section.key}: ${isChecked} (permission value: ${permissionValue}, type: ${typeof permissionValue})`);
                permissionContent += `
                    <div class="permission-section">
                        <label>
                            <input type="checkbox" name="${section.key}" value="1" ${isChecked}>
                            ${section.name}
                        </label>
                    </div>
                `;
            });
            
            permissionContent += `
                </form>
                <div class="permission-actions">
                    <button type="button" class="cancel-permissions" onclick="closePermissionModal()">Cancel</button>
                    <button type="button" class="save-permissions" onclick="savePermissions()">Save Permissions</button>
                </div>
            `;
            
            // Show modal
            document.getElementById('permissionModalBody').innerHTML = permissionContent;
            document.getElementById('permissionModal').style.display = 'block';
            
            // Add click outside to close modal
            document.getElementById('permissionModal').onclick = function(e) {
                if (e.target === this) {
                    closePermissionModal();
                }
            };
        }
        function closePermissionModal() {
            document.getElementById('permissionModal').style.display = 'none';
        }
        function savePermissions() {
            console.log('Saving permissions...');
            const userId = document.getElementById('permissionUserId').value;
            const form = document.getElementById('permissionForm');
            
            // Get all checkboxes and their states
            const permissions = {};
            const sections = ['users', 'inventory', 'transactions', 'orders', 'chat', 'content'];
            
            sections.forEach(section => {
                const checkbox = form.querySelector(`input[name="${section}"]`);
                permissions[section] = checkbox ? checkbox.checked : false;
                console.log(`Section ${section}: ${permissions[section]} (checkbox exists: ${!!checkbox})`);
            });
            
            console.log('User ID:', userId);
            console.log('Permissions to save:', permissions);
            
            // Send permission update request
            fetch('/Employee/Admin/ManageUsers/UpdatePermissions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    userId: parseInt(userId),
                    permissions: permissions
                })
            })
            .then(response => {
                console.log('Response status:', response.status);
                return response.json();
            })
            .then(data => {
                console.log('Response data:', data);
                if (data.success) {
                    closePermissionModal();
                    alert('Permissions updated successfully!');
                    // Reload the page to show updated permissions
                    location.reload();
                } else {
                    alert('Failed to update permissions: ' + (data.message || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to update permissions: ' + error.message);
            });
        }

        // Toggle user status function
        function toggleUserStatus(userId, newStatus) {
            if (confirm(`Are you sure you want to ${newStatus ? 'activate' : 'deactivate'} this user?`)) {
                fetch(`/Employee/Admin/ManageUsers/ToggleActive/${userId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (response.ok) {
                        showCustomPopup(`User ${newStatus ? 'activated' : 'deactivated'} successfully!`);
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    } else {
                        alert('Failed to update user status');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating user status');
                });
            }
        }

        // Delete functionality removed for security reasons
        document.body.addEventListener('click', function(e) {
            if (e.target && e.target.id === 'saveAccessPermissionsBtn') {
                const userId = document.getElementById('accessUserId').value;
                const sections = ['inventory', 'transactions', 'users', 'chat', 'content', 'logs'];
                const permissions = {};
                sections.forEach(section => {
                    const checked = document.querySelector(`#accessModalOverlay input[name='${section}'][value='edit']`).checked;
                    permissions[section] = checked;
                });
                fetch('/Employee/Admin/Users/SetPermissions', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userId, permissions })
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        closeAccessModal();
                        showCustomPopup('Permissions updated!');
                    } else {
                        alert('Failed to save permissions');
                    }
                });
            }
        });
    </script>

    <!-- Permission Management Modal -->
    <div id="permissionModal" class="permission-modal">
        <div class="permission-modal-content">
            <div class="permission-modal-header">
                <h3>Manage User Permissions</h3>
                <span class="close" onclick="closePermissionModal()">&times;</span>
            </div>
            <div id="permissionModalBody">
                <!-- Permission content will be loaded here -->
            </div>
        </div>
    </div>
</body>
</html> 