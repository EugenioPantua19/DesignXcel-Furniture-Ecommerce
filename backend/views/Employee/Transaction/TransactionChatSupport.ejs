<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Support - Transaction</title>
    <link rel="stylesheet" href="/css/Employee/Admin/AdminIndexStyles.css">
    <style>
      .chat-support-container { display: flex; height: 80vh; background: #f7f7f7; border-radius: 8px; overflow: hidden; }
      .chat-thread-list { width: 340px; background: #fff; border-right: 1px solid #eee; display: flex; flex-direction: column; }
      .chat-search-bar { padding: 16px; border-bottom: 1px solid #eee; display: flex; justify-content: center; align-items: center; }
      .chat-search-input { width: 90%; max-width: 260px; padding: 8px 12px; border-radius: 6px; border: 1px solid #ccc; display: block; margin: 0 auto; }
      .chat-thread-items { flex: 1; overflow-y: auto; }
      .chat-thread-item { padding: 14px 18px; border-bottom: 1px solid #f2f2f2; cursor: pointer; display: flex; align-items: center; justify-content: space-between; background: #fff; transition: background 0.15s; }
      .chat-thread-item.active { background: #f0f0f0; }
      .chat-thread-item.unread { font-weight: bold; }
      .chat-thread-info { flex: 1; }
      .chat-thread-name { font-size: 1.05em; }
      .chat-thread-last { color: #888; font-size: 0.95em; margin-top: 2px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
      .chat-thread-unread { background: #e74c3c; color: #fff; border-radius: 12px; font-size: 0.85em; padding: 2px 8px; margin-left: 8px; }
      .chat-conversation { flex: 1; display: flex; flex-direction: column; max-width: 1400px; min-width: 0; margin: 0 auto; }
      .chat-conversation-header { padding: 18px 24px; border-bottom: 1px solid #eee; background: #fff; font-weight: 600; font-size: 1.1em; }
      .chat-messages-area { flex: 1; padding: 24px; overflow-y: auto; background: #e5e7eb; }
      .chat-message-row { margin-bottom: 16px; display: flex; }
      .chat-message-row.admin { justify-content: flex-end; }
      .chat-message-bubble { max-width: 60%; padding: 10px 16px; border-radius: 16px; font-size: 1em; background: #F0B21B; color: #2c3e50; box-shadow: 0 1px 4px rgba(0,0,0,0.04); }
      .chat-message-row.customer .chat-message-bubble { background: #fffbe6; color: #2c3e50; border-bottom-left-radius: 4px; }
      .chat-message-row.admin .chat-message-bubble { background: #F0B21B; color: #2c3e50; border-bottom-right-radius: 4px; }
      .chat-reply-area { padding: 18px 24px; border-top: 1px solid #eee; background: #fff; display: flex; }
      .chat-reply-input { flex: 1; border-radius: 16px; border: 1px solid #ccc; padding: 10px 16px; font-size: 1em; margin-right: 12px; }
      .chat-reply-btn { background: #F0B21B; color: #2c3e50; border: none; border-radius: 16px; padding: 10px 24px; font-weight: 600; cursor: pointer; }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="sidebar">
            <div class="sidebar-header">
                <h3>Transaction Panel</h3>
            </div>
            <ul class="sidebar-menu">
                <li class="sidebar-section-label">Inventory</li>
                <ul class="sidebar-submenu" style="display:block;">
                    <li><a href="/Employee/Transaction/Products">Products</a></li>
                    <li><a href="/Employee/Transaction/TransactionRawMaterials">Raw Materials</a></li>
                    <li><a href="/Employee/Transaction/Alerts">Alerts</a></li>
                    <li><a href="/Employee/Transaction/Archived">Archived items</a></li>
                </ul>
                <li class="sidebar-section-label">Transactions</li>
                <ul class="sidebar-submenu" style="display:block;">
                    <li><a href="/Employee/Transaction/TransactionDeliveryRates">Delivery Rates</a></li>
                    <li><a href="/Employee/Transaction/WalkIn">Walk In</a></li>
                    <li><a href="/Employee/Transaction/OrdersPending">Pending Orders</a></li>
                    <li><a href="/Employee/Transaction/OrdersProcessing">In Process</a></li>
                    <li><a href="/Employee/Transaction/OrdersShipping">Shipping</a></li>
                    <li><a href="/Employee/Transaction/OrdersDelivery">On Delivery</a></li>
                    <li><a href="/Employee/Transaction/OrdersReceive">To Receive</a></li>
                    <li><a href="/Employee/Transaction/CancelledOrders">Cancelled Orders</a></li>
                    <li><a href="/Employee/Transaction/CompletedOrders">Completed Orders</a></li>
                </ul>
                <li><a href="/Employee/Transaction/ManageUsers">Manage Users</a></li>
                <li><a href="/Employee/Transaction/ChatSupport">Chat Support</a></li>
                <li><a href="/Employee/Transaction/CMS">Content Management</a></li>
                <li><a href="/Employee/Transaction/Logs">Activity Logs</a></li>
            </ul>
        </div>
        <div class="main-content">
            <div class="header">
                <h2>Chat Support</h2>
            </div>
            <div class="content-area">
              <div class="chat-support-container">
                <!-- Left: Thread List -->
                <div class="chat-thread-list">
                  <div class="chat-search-bar">
                    <input class="chat-search-input" type="text" placeholder="Search..." />
                  </div>
                  <div class="chat-thread-items">
                    <% if (threads && threads.length) { %>
                      <% threads.forEach(function(thread) { %>
                        <div class="chat-thread-item<%= selectedThread && selectedThread.CustomerID === thread.CustomerID ? ' active' : '' %><%= thread.UnreadCount > 0 ? ' unread' : '' %>">
                          <div class="chat-thread-info">
                            <div class="chat-thread-name"><%= thread.FullName %></div>
                            <div class="chat-thread-last"><%= thread.LastMessageText %></div>
                          </div>
                          <% if (thread.UnreadCount > 0) { %>
                            <span class="chat-thread-unread"><%= thread.UnreadCount %></span>
                          <% } %>
                        </div>
                      <% }); %>
                    <% } else { %>
                      <div style="padding: 24px; color: #888;">No chats yet.</div>
                    <% } %>
                  </div>
                </div>
                <!-- Right: Conversation -->
                <div class="chat-conversation">
                  <% if (selectedThread) { %>
                    <div class="chat-conversation-header">
                      <%= selectedThread.FullName %> &lt;<%= selectedThread.Email %>&gt;
                      <button id="reload-messages-btn" style="float:right; margin-left:16px; padding:4px 14px; border-radius:8px; border:none; background:#F0B21B; color:#2c3e50; font-weight:600; cursor:pointer;">Reload</button>
                    </div>
                    <div class="chat-messages-area">
                      <% if (messages && messages.length) { %>
                        <% messages.forEach(function(msg) { %>
                          <div class="chat-message-row <%= msg.SenderType === 'support' ? 'admin' : 'customer' %>">
                            <div class="chat-message-bubble"><%= msg.MessageText %></div>
                          </div>
                        <% }); %>
                      <% } else { %>
                        <div style="color: #888;">No messages yet.</div>
                      <% } %>
                    </div>
                    <form class="chat-reply-area" id="chat-reply-form" autocomplete="off">
                      <input class="chat-reply-input" id="chat-reply-input" type="text" placeholder="Type your reply..." autocomplete="off" />
                      <button class="chat-reply-btn" type="submit">Send</button>
                    </form>
                  <% } else { %>
                    <div class="chat-conversation-header">Select a chat to view conversation</div>
                  <% } %>
                </div>
              </div>
            </div>
        </div>
    </div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('chat-reply-form');
    const input = document.getElementById('chat-reply-input');
    const customerId = "<%= selectedThread ? selectedThread.CustomerID : '' %>";
    const reloadBtn = document.getElementById('reload-messages-btn');
    const messagesArea = document.querySelector('.chat-messages-area');

    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      const message = input.value.trim();
      if (!message) return;
      const res = await fetch(`/api/support/chat/messages/${customerId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ message })
      });
      const data = await res.json();
      if (data.success) {
        fetchMessagesAndUpdate(); // Just refresh messages, don't reload page
        input.value = '';
      } else {
        alert('Failed to send message');
      }
    });

    async function fetchMessagesAndUpdate() {
      if (!customerId) return;
      const res = await fetch(`/api/support/chat/messages/${customerId}`);
      const data = await res.json();
      if (data.success && Array.isArray(data.messages)) {
        let html = '';
        if (data.messages.length === 0) {
          html = '<div style="color: #888;">No messages yet.</div>';
        } else {
          data.messages.forEach(function(msg) {
            const rowClass = msg.SenderType === 'support' ? 'admin' : 'customer';
            html += `<div class="chat-message-row ${rowClass}"><div class="chat-message-bubble">${msg.MessageText}</div></div>`;
          });
        }
        messagesArea.innerHTML = html;
        messagesArea.scrollTop = messagesArea.scrollHeight;
      }
    }
    // Polling every 2 seconds
    setInterval(fetchMessagesAndUpdate, 2000);
    // Manual reload button
    if (reloadBtn) reloadBtn.addEventListener('click', fetchMessagesAndUpdate);
  });
</script>
</body>
</html> 