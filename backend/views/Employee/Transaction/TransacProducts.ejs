<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction Manager Products - Design Excellence</title>
    <link rel="stylesheet" href="/css/Employee/Admin/AdminIndexStyles.css">
    <style>
        /* Basic table styling */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th,
        td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr,
        tbody tr {
            height: 70px; /* Fixed row height for uniformity */
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #e9e9e9;
        }
        .product-image-container {
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #fff;
            border-radius: 4px;
            border: 1px solid #ccc;
            overflow: hidden;
        }
        .product-image {
            max-width: 50px;
            max-height: 50px;
            display: block;
            margin: auto;
        }

        /* Custom Success Message Popup */
        .custom-popup {
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #4CAF50;
            color: white;
            padding: 15px 25px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            z-index: 1000;
            animation: slideIn 0.5s ease-out;
            max-width: 300px;
        }

        .custom-popup.error {
            background-color: #f44336;
        }

        .custom-popup-content {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .custom-popup-icon {
            font-size: 24px;
        }

        .custom-popup-message {
            font-size: 14px;
            line-height: 1.4;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        .custom-popup.hide {
            animation: slideOut 0.5s ease-in forwards;
        }

        /* Custom Delete Confirmation Modal */
        .delete-confirmation-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .delete-confirmation-content {
            background-color: white;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            width: 90%;
            max-width: 400px;
            text-align: center;
            animation: fadeIn 0.3s ease-out;
        }

        .delete-confirmation-content h3 {
            color: #333;
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 1.5em;
        }

        .delete-confirmation-content p {
            color: #666;
            margin-bottom: 20px;
            font-size: 1.1em;
        }

        .delete-confirmation-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
        }

        .delete-confirmation-buttons button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s ease;
        }

        .delete-confirm-btn {
            background-color: #dc3545;
            color: white;
        }

        .delete-confirm-btn:hover {
            background-color: #c82333;
        }

        .delete-cancel-btn {
            background-color: #6c757d;
            color: white;
        }

        .delete-cancel-btn:hover {
            background-color: #5a6268;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: scale(0.95);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        .delete-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .delete-btn:hover {
            background-color: #c82333;
        }

        .edit-btn {
            background-color: #ffc000;
            color: #333;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 5px;
            transition: background-color 0.3s ease;
        }

        .edit-btn:hover {
            background-color: #fdb800;
        }

        .materials-section {
            border: 1px solid #ddd;
            padding: 15px;
            border-radius: 5px;
            margin-top: 20px;
            background-color: #f9f9f9;
        }

        .materials-section h4 {
            margin-top: 0;
            margin-bottom: 15px;
            color: #333;
        }

        .material-row {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
            align-items: center;
        }

        .material-row select,
        .material-row input[type="number"] {
            flex-grow: 1;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .remove-material-btn,
        .add-material-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .remove-material-btn:hover {
            background-color: #c82333;
        }

        .add-material-btn {
            background-color: #28a745;
            margin-top: 10px;
        }

        .add-material-btn:hover {
            background-color: #218838;
        }

        /* Add Product Button - Mustard Yellow Simple Style */
        .add-product-btn {
            background-color: #FFC107;
            color: #333;
            border: none;
            border-radius: 5px;
            padding: 10px 22px;
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.2s;
            box-shadow: none;
            outline: none;
        }
        .add-product-btn:hover, .add-product-btn:focus {
            background-color: #e0ac06;
            color: #222;
        }

        /* Add after .edit-btn styles */
        .view-btn {
            background-color: #2196F3;
            color: #fff;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 5px;
            transition: background-color 0.3s ease;
        }
        .view-btn:hover {
            background-color: #1769aa;
        }

        /* Highlight low and out-of-stock products */
        .low-stock-row {
            background-color: #FFF3CD !important;
            color: #333;
        }
        .critical-stock-row {
            background-color: #FF9800 !important;
        }
        .out-of-stock-row {
            background-color: #DC3545 !important;
            color: #fff;
        }

        /* Sidebar submenu and section label styles */
        .sidebar-section-label {
            color: #fff;
            font-weight: bold;
            padding: 12px 18px 6px 18px;
            background: #333;
            border-top: 1px solid #444;
            border-bottom: none;
            margin-top: 2px;
            margin-bottom: 0;
            font-size: 1.08em;
        }
        .sidebar-submenu {
            list-style: none;
            margin: 0 0 0 0;
            padding: 0 0 0 18px;
            background: #444;
        }
        .sidebar-submenu li a {
            color: #fff;
            display: block;
            padding: 10px 0 10px 10px;
            text-decoration: none;
            font-size: 1em;
            border-bottom: 1px solid #555;
            transition: background 0.2s;
        }
        .sidebar-submenu li a:hover {
            background: #555;
        }

        .header {
            position: sticky;
            top: 0;
            z-index: 10;
            background: #fff;
            padding-top: 18px;
            padding-bottom: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.07);
        }

        /* Modal Overlay Styles (for Add/Edit Product) */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0,0,0,0.5);
            z-index: 2000;
            justify-content: center;
            align-items: center;
        }
        .modal.show {
            display: flex;
        }
        .modal-content {
            background: #fff;
            border-radius: 8px;
            padding: 30px 30px 20px 30px;
            max-width: 500px;
            width: 95vw;
            box-shadow: 0 8px 32px rgba(0,0,0,0.25);
            position: relative;
        }
        .close-button {
            position: absolute;
            top: 12px;
            right: 18px;
            font-size: 1.5em;
            color: #888;
            cursor: pointer;
        }
        @media (max-width: 600px) {
            .modal-content {
                padding: 18px 6px 10px 6px;
                max-width: 98vw;
            }
        }
    </style>
</head>
<body>
    <!-- Custom Success/Error Popup -->
    <div id="customPopup" class="custom-popup">
        <div class="custom-popup-content">
            <span class="custom-popup-icon">✓</span>
            <span class="custom-popup-message"></span>
        </div>
    </div>

    <!-- Add Delete Confirmation Modal -->
    <div id="deleteConfirmationModal" class="delete-confirmation-modal">
        <div class="delete-confirmation-content">
            <h3>Delete Product</h3>
            <p>Are you sure you want to delete this product? This action cannot be undone.</p>
            <div class="delete-confirmation-buttons">
                <button class="delete-cancel-btn" id="cancelDelete">Cancel</button>
                <button class="delete-confirm-btn" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>

    <!-- Add Stock Confirmation Modal -->
    <div id="stockConfirmationModal" class="delete-confirmation-modal">
        <div class="delete-confirmation-content">
            <h3>Update Stock</h3>
            <p id="stockConfirmationText">Are you sure you want to update the stock?</p>
            <div class="delete-confirmation-buttons">
                <button class="delete-cancel-btn" id="cancelStockChange">Cancel</button>
                <button class="delete-confirm-btn" id="confirmStockChange">Yes</button>
            </div>
        </div>
    </div>

    <div class="dashboard-container">
        <div class="sidebar">
            <div class="sidebar-header">
                <h3>Transaction Manager Panel</h3>
            </div>
            <ul class="sidebar-menu">
                <li><a href="/Employee/TransactionManager">Dashboard</a></li>
                <li class="sidebar-section-label" style="font-weight:normal;">Inventory</li>
                <ul class="sidebar-submenu" style="display:block;">
                    <li><a href="/Employee/Transaction/TransacProducts">Products</a></li>
                    <li><a href="/Employee/Transaction/TransacVariations">Variations</a></li>
                    <li><a href="/Employee/Transaction/TransacMaterials">Raw Materials</a></li>
                    <li><a href="/Employee/Transaction/TransacAlerts">Alerts</a></li>
                    <li><a href="/Employee/Transaction/TransacArchived">Archived items</a></li>
                </ul>
                <li class="sidebar-section-label" style="font-weight:normal;">Transactions</li>
                <ul class="sidebar-submenu" style="display:block;">
                    <li><a href="/Employee/Transaction/TransacRates">Delivery Rates</a></li>
                    <li><a href="/Employee/Transaction/TransacWalkIn">Walk In</a></li>
                    <li><a href="/Employee/Transaction/OrdersPending">Orders Pending</a></li>
                    <li><a href="/Employee/Transaction/OrdersProcessing">Orders Processing</a></li>
                    <li><a href="/Employee/Transaction/OrdersShipping">Orders Shipping</a></li>
                    <li><a href="/Employee/Transaction/OrdersDelivery">Orders Delivery</a></li>
                    <li><a href="/Employee/Transaction/OrdersReceive">Orders Receive</a></li>
                    <li><a href="/Employee/Transaction/CancelledOrders">Cancelled Orders</a></li>
                    <li><a href="/Employee/Transaction/CompletedOrders">Completed Orders</a></li>
                </ul>
                <li><a href="/Employee/Transaction/TransacManUsers">Manage Users</a></li>
                <li><a href="/Employee/Transaction/TransacReviews">Reviews</a></li>
                <li><a href="/Employee/Transaction/TransacChatSupport">Chat Support</a></li>
                <li><a href="/Employee/Transaction/TransacCMS">Content Management</a></li>
                <li><a href="/Employee/Transaction/TransacLogs">Activity Logs</a></li>
            </ul>
        </div>
        <div class="main-content">
            <div class="header">
                <h2>Product List</h2>
                <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 10px;">
                    <select id="categoryFilter" style="padding: 7px 12px; border-radius: 4px; border: 1px solid #ccc;">
                        <option value="">All Categories</option>
                        <option value="Chairs">Chairs</option>
                        <option value="Tables">Tables</option>
                        <option value="Storage">Storage</option>
                        <option value="Partitions">Partitions</option>
                        <option value="Others">Others</option>
                    </select>
                    <button id="sortCategoryBtn" style="background: #2196F3; color: #fff; border: none; border-radius: 4px; padding: 7px 18px; font-weight: 600; cursor: pointer;">Sort</button>
                    <button id="resetCategoryBtn" style="background: #888; color: #fff; border: none; border-radius: 4px; padding: 7px 18px; font-weight: 600; cursor: pointer;">Reset</button>
                    <button id="addProductBtn" class="add-product-btn">Add New Product</button>
                </div>
                <div style="display: flex; align-items: center; gap: 18px; margin-bottom: 10px;">
                    <span style="display: flex; align-items: center; gap: 6px;">
                        <span style="display:inline-block;width:22px;height:22px;background:#DC3545;border-radius:4px;margin-right:4px;"></span>
                        <span style="color:#333;font-size:1em;">Out of Stock (0 quantity)</span>
                    </span>
                    <span style="display: flex; align-items: center; gap: 6px;">
                        <span style="display:inline-block;width:22px;height:22px;background:#FF9800;border-radius:4px;margin-right:4px;"></span>
                        <span style="color:#333;font-size:1em;">Critical Stock (1-10 quantity)</span>
                    </span>
                    <span style="display: flex; align-items: center; gap: 6px;">
                        <span style="display:inline-block;width:22px;height:22px;background:#FFF3CD;border-radius:4px;margin-right:4px;border:1px solid #ffe082;"></span>
                        <span style="color:#333;font-size:1em;">Low Stock (11-20 quantity)</span>
                    </span>
                </div>
            </div>
            <div class="content-area">
                <% if (locals.error && locals.error.length > 0) { %>
                    <div class="error-message"><%= error %></div>
                <% } %>
                <% if (locals.success && locals.success.length > 0) { %>
                    <div class="success-message"><%= success %></div>
                <% } %>
                <div id="addProductModal" class="modal">
                    <div class="modal-content">
                        <span class="close-button">&times;</span>
                        <h3>Add New Product</h3>
                        <form id="addProductForm" action="/Employee/Transaction/TransacProducts/Add" method="POST" enctype="multipart/form-data">
                            <label for="name">Name:</label>
                            <input type="text" id="name" name="name" required><br><br>
                            <label for="description">Description:</label>
                            <textarea id="description" name="description"></textarea><br><br>
                            <label for="price">Price:</label>
                            <input type="number" id="price" name="price" step="0.01" required><br><br>
                            <label for="stockquantity">Stock Quantity:</label>
                            <input type="number" id="stockquantity" name="stockquantity" required><br><br>
                            <label for="category">Category:</label><br>
                            <select id="category" name="category"></select>
                            <button type="button" id="addCategoryBtn" style="margin-left:8px;">Add New Category</button>
                            <div id="addCategoryModal" class="modal">
                                <div class="modal-content">
                                    <span class="close-button" id="closeAddCategoryModal">&times;</span>
                                    <h3>Add New Category</h3>
                                    <input type="text" id="newCategoryName" placeholder="Category name" />
                                    <button id="saveCategoryBtn">Save</button>
                                    <button id="cancelAddCategoryBtn">Cancel</button>
                                </div>
                            </div>
                            <label for="dimensions">Dimensions (L x W x H in cm):</label>
                            <input type="text" id="dimensions" name="dimensions" placeholder="e.g., 100x50x75"><br><br>
                            <label for="image">Product Image:</label><br>
                            <input type="file" id="image" name="image" accept="image/*"><br><br>
                            <div class="materials-section">
                                <h4>Required Materials for Production</h4>
                                <div id="addMaterialsContainer"></div>
                                <button type="button" id="addMaterialRowBtn" class="add-material-btn">Add Material</button>
                            </div>
                            <br>
                            <button type="submit">Save Product</button>
                            <button type="button" id="cancelAddProduct">Cancel</button>
                        </form>
                    </div>
                </div>
                <% if (products && products.length > 0) { %>
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Price</th>
                                <th>Stock</th>
                                <th>Category</th>
                                <th>Image</th>
                                <th>Date Added</th>
                                <th>Active</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% products.forEach(product => { %>
                                <tr class="<%= product.StockQuantity === 0 ? 'out-of-stock-row' : (product.StockQuantity > 0 && product.StockQuantity <= 10 ? 'critical-stock-row' : (product.StockQuantity > 10 && product.StockQuantity <= 20 ? 'low-stock-row' : '')) %>">
                                    <td><%= product.ProductID %></td>
                                    <td><%= product.Name %></td>
                                    <td><%= product.Description %></td>
                                    <td>
                                        <% if (product.DiscountedPrice && product.DiscountedPrice !== product.Price) { %>
                                            <div style="text-decoration: line-through; color: #999; font-size: 0.9em;">
                                                ₱<%= product.Price.toFixed(2) %>
                                            </div>
                                            <div style="color: #e74c3c; font-weight: bold; font-size: 1.1em;">
                                                ₱<%= product.DiscountedPrice.toFixed(2) %>
                                            </div>
                                        <% } else { %>
                                            ₱<%= product.Price.toFixed(2) %>
                                        <% } %>
                                    </td>
                                    <td>
                                        <input type="number" class="stock-input" value="<%= product.StockQuantity %>" min="0" style="width:60px;" data-id="<%= product.ProductID %>">
                                        <button class="stock-check-btn" data-id="<%= product.ProductID %>" title="Update Stock">✔</button>
                                    </td>
                                    <td><%= product.Category %></td>
                                    <td>
                                        <% if (product.ImageURL) { %>
                                            <div class="product-image-container">
                                                <img src="<%= product.ImageURL %>" alt="<%= product.Name %>" class="product-image" />
                                            </div>
                                        <% } else { %>
                                            <div class="product-image-container">
                                                <span style="color: #bbb; font-size: 12px;">No image</span>
                                            </div>
                                        <% } %>
                                    </td>
                                    <td><%= product.DateAdded ? new Date(product.DateAdded).toLocaleDateString() : 'N/A' %></td>
                                    <td><%= product.IsActive ? 'Yes' : 'No' %></td>
                                    <td>
                                        <button class="view-btn" 
                                            data-id="<%= product.ProductID %>"
                                            data-name="<%= product.Name %>"
                                            data-description="<%= product.Description %>"
                                            data-price="<%= product.Price %>"
                                            data-stock="<%= product.StockQuantity %>"
                                            data-category="<%= product.Category %>"
                                            data-dimensions="<%= product.Dimensions %>"
                                            data-imageurl="<%= product.ImageURL %>"
                                            data-dateadded="<%= product.DateAdded ? new Date(product.DateAdded).toLocaleDateString() : 'N/A' %>"
                                            data-isactive="<%= product.IsActive ? 'Yes' : 'No' %>"
                                            title="View"
                                        >
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/></svg>
                                        </button>
                                        <button class="edit-btn" data-id="<%= product.ProductID %>" data-name="<%= product.Name %>" data-description="<%= product.Description %>" data-price="<%= product.Price %>" data-stock="<%= product.StockQuantity %>" data-category="<%= product.Category %>" data-dimensions="<%= product.Dimensions %>" data-imageurl="<%= product.ImageURL %>" title="Edit">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 20h9"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16.5 3.5a2.121 2.121 0 113 3L7 19.5 3 21l1.5-4L16.5 3.5z"/></svg>
                                        </button>
                                        <form action="/Employee/Transaction/TransacProducts/Delete/<%= product.ProductID %>" method="POST" style="display:inline;">
                                            <button type="submit" class="delete-btn" title="Delete">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3m5 0H6"/></svg>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <div class="pagination" style="text-align:center; margin-top:20px;">
                        <% if (page > 1) { %>
                            <a href="?page=<%= page - 1 %>" class="pagination-btn">Previous</a>
                        <% } %>
                        <span>Page <%= page %> of <%= totalPages %></span>
                        <% if (page < totalPages) { %>
                            <a href="?page=<%= page + 1 %>" class="pagination-btn">Next</a>
                        <% } %>
                    </div>
                <% } else { %>
                    <p>No products found or an error occurred.</p>
                <% } %>
            </div>
        </div>
    </div>
    <div id="editProductModal" class="modal">
        <div class="modal-content">
            <span class="close-button" id="closeEditModal">&times;</span>
            <h3>Edit Product</h3>
            <form id="editProductForm" action="/Employee/Transaction/TransacProducts/Edit" method="POST" enctype="multipart/form-data">
                <input type="hidden" id="editProductID" name="productid">
                <input type="hidden" id="editCurrentImageURL" name="currentImageURL">
                <label for="editName">Name:</label>
                <input type="text" id="editName" name="name" required><br><br>
                <label for="editDescription">Description:</label>
                <textarea id="editDescription" name="description"></textarea><br><br>
                <label for="editPrice">Price:</label>
                <input type="number" id="editPrice" name="price" step="0.01" required><br><br>
                <label for="editStockQuantity">Stock Quantity:</label>
                <input type="number" id="editStockQuantity" name="stockquantity" required><br><br>
                <label for="editCategory">Category:</label><br>
                <select id="editCategory" name="category"></select>
                <button type="button" id="addCategoryBtnEdit" style="margin-left:8px;">Add New Category</button>
                <div id="addCategoryModalEdit" class="modal">
                    <div class="modal-content">
                        <span class="close-button" id="closeAddCategoryModalEdit">&times;</span>
                        <h3>Add New Category</h3>
                        <input type="text" id="newCategoryNameEdit" placeholder="Category name" />
                        <button id="saveCategoryBtnEdit">Save</button>
                        <button id="cancelAddCategoryBtnEdit">Cancel</button>
                    </div>
                </div>
                
                
                <label for="editImage">Product Image:</label><br>
                <input type="file" id="editImage" name="image" accept="image/*"><br>
                <img id="currentImagePreview" src="" alt="Current Image" style="max-width: 50px; max-height: 50px; margin-top: 5px; display: none;" />
                <br><br>
                <div class="materials-section">
                    <h4>Required Materials for Production</h4>
                    <div id="editMaterialsContainer"></div>
                    <button type="button" id="editMaterialRowBtn" class="add-material-btn">Add Material</button>
                </div>
                <br>
                <button type="submit">Save Changes</button>
                <button type="button" id="cancelEditProduct">Cancel</button>
            </form>
        </div>
    </div>

    <!-- View Product Modal -->
    <div id="viewProductModal" class="modal">
        <div class="modal-content" style="max-width: 500px;">
            <span class="close-button" id="closeViewModal">&times;</span>
            <h3>Product Details</h3>
            <div id="viewProductDetails">
                <!-- Details will be populated by JS -->
            </div>
            <div id="viewProductMaterials" style="margin-top: 20px;">
                <!-- Materials will be populated by JS -->
            </div>
        </div>
    </div>

    <!-- Custom Confirmation Modal for Logout -->
    <div id="logoutConfirmModal" class="modal-overlay">
        <div class="modal-content">
            <h3>Confirm Logout</h3>
            <p>Are you sure you want to log out?</p>
            <div class="modal-buttons">
                <button class="modal-button confirm" id="confirmLogoutBtn">Logout</button>
                <button class="modal-button cancel" id="cancelLogoutBtn">Cancel</button>
            </div>
        </div>
    </div>

    <script src="/js/Employee/Transaction/TransacProducts.js"></script>
    <script>
        // Global logout handler
        window.handleLogout = function(event) {
            event.preventDefault();
            const logoutConfirmModal = document.getElementById('logoutConfirmModal');
            if (logoutConfirmModal) {
                logoutConfirmModal.classList.add('show');
            }
        };

        // Logout confirmation handlers
        document.getElementById('confirmLogoutBtn').addEventListener('click', function() {
            window.location.href = '/logout';
        });

        document.getElementById('cancelLogoutBtn').addEventListener('click', function() {
            const logoutConfirmModal = document.getElementById('logoutConfirmModal');
            if (logoutConfirmModal) {
                logoutConfirmModal.classList.remove('show');
            }
        });

        // Close logout modal when clicking outside
        document.getElementById('logoutConfirmModal').addEventListener('click', function(e) {
            if (e.target === this) {
                this.classList.remove('show');
            }
        });

        async function fetchAndPopulateCategories() {
            // Use the correct endpoint for each role
            let endpoint = '/api/categories';
            if (window.location.pathname.includes('/Inventory/')) {
                endpoint = '/api/inventory/categories';
            }
            const res = await fetch(endpoint);
            const data = await res.json();
            if (data.success) {
                // For add/edit forms
                const dropdowns = [document.getElementById('category'), document.getElementById('editCategory')].filter(Boolean);
                dropdowns.forEach(dropdown => {
                    dropdown.innerHTML = '';
                    data.categories.forEach(cat => {
                        const option = document.createElement('option');
                        option.value = cat;
                        option.textContent = cat;
                        dropdown.appendChild(option);
                    });
                });
                // For sort/filter dropdown
                const filterDropdown = document.getElementById('categoryFilter');
                if (filterDropdown) {
                    filterDropdown.innerHTML = '<option value="">All Categories</option>';
                    data.categories.forEach(cat => {
                        const option = document.createElement('option');
                        option.value = cat;
                        option.textContent = cat;
                        filterDropdown.appendChild(option);
                    });
                }
            }
        }
        document.addEventListener('DOMContentLoaded', fetchAndPopulateCategories);

        // Add Category Modal logic for Add Product
        const addCategoryBtn = document.getElementById('addCategoryBtn');
        const addCategoryModal = document.getElementById('addCategoryModal');
        const closeAddCategoryModal = document.getElementById('closeAddCategoryModal');
        const cancelAddCategoryBtn = document.getElementById('cancelAddCategoryBtn');
        const saveCategoryBtn = document.getElementById('saveCategoryBtn');
        addCategoryBtn.onclick = function() {
            addCategoryModal.classList.add('show');
            document.getElementById('newCategoryName').value = '';
        };
        closeAddCategoryModal.onclick = cancelAddCategoryBtn.onclick = function() {
            addCategoryModal.classList.remove('show');
        };
        saveCategoryBtn.onclick = function() {
            const newCat = document.getElementById('newCategoryName').value.trim();
            if (!newCat) {
                alert('Please enter a category name.');
                return;
            }
            [document.getElementById('category'), document.getElementById('editCategory')].forEach(dropdown => {
                if (dropdown && !Array.from(dropdown.options).some(opt => opt.value === newCat)) {
                    const option = document.createElement('option');
                    option.value = newCat;
                    option.textContent = newCat;
                    dropdown.appendChild(option);
                    dropdown.value = newCat;
                }
            });
            addCategoryModal.classList.remove('show');
        };

        // Add Category Modal logic for Edit Product
        const addCategoryBtnEdit = document.getElementById('addCategoryBtnEdit');
        const addCategoryModalEdit = document.getElementById('addCategoryModalEdit');
        const closeAddCategoryModalEdit = document.getElementById('closeAddCategoryModalEdit');
        const cancelAddCategoryBtnEdit = document.getElementById('cancelAddCategoryBtnEdit');
        const saveCategoryBtnEdit = document.getElementById('saveCategoryBtnEdit');
        addCategoryBtnEdit.onclick = function() {
            addCategoryModalEdit.classList.add('show');
            document.getElementById('newCategoryNameEdit').value = '';
        };
        closeAddCategoryModalEdit.onclick = cancelAddCategoryBtnEdit.onclick = function() {
            addCategoryModalEdit.classList.remove('show');
        };
        saveCategoryBtnEdit.onclick = function() {
            const newCat = document.getElementById('newCategoryNameEdit').value.trim();
            if (!newCat) {
                alert('Please enter a category name.');
                return;
            }
            [document.getElementById('category'), document.getElementById('editCategory')].forEach(dropdown => {
                if (dropdown && !Array.from(dropdown.options).some(opt => opt.value === newCat)) {
                    const option = document.createElement('option');
                    option.value = newCat;
                    option.textContent = newCat;
                    dropdown.appendChild(option);
                    dropdown.value = newCat;
                }
            });
            addCategoryModalEdit.classList.remove('show');
        };
    </script>
</body>
</html> 