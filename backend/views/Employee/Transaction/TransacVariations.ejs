<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction Manager Variations - Design Excellence</title>
    <link rel="stylesheet" href="/css/Employee/Admin/AdminIndexStyles.css">
    <style>
        /* Basic table styling */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th,
        td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr,
        tbody tr {
            height: 70px; /* Fixed row height for uniformity */
        }
        tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        tr:hover {
            background-color: #e9e9e9;
        }

        /* Custom Success Message Popup */
        .custom-popup {
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #4CAF50;
            color: white;
            padding: 15px 25px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            z-index: 1000;
            animation: slideIn 0.5s ease-out;
            max-width: 300px;
        }

        .custom-popup.error {
            background-color: #f44336;
        }

        .custom-popup-content {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .custom-popup-icon {
            font-size: 24px;
        }

        .custom-popup-message {
            font-size: 14px;
            line-height: 1.4;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        .custom-popup.hide {
            animation: slideOut 0.5s ease-in forwards;
        }

        /* Add Variation Button */
        .add-variation-btn {
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 8px 16px;
            font-size: 0.9em;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.2s;
            box-shadow: none;
            outline: none;
        }
        .add-variation-btn:hover, .add-variation-btn:focus {
            background-color: #218838;
            color: white;
        }

        .edit-btn {
            background-color: #ffc000;
            color: #333;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 5px;
            transition: background-color 0.3s ease;
        }

        .edit-btn:hover {
            background-color: #fdb800;
        }

        .delete-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .delete-btn:hover {
            background-color: #c82333;
        }

        .view-btn {
            background-color: #2196F3;
            color: #fff;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 5px;
            transition: background-color 0.3s ease;
        }
        .view-btn:hover {
            background-color: #1769aa;
        }

        /* Sidebar submenu and section label styles */
        .sidebar-section-label {
            color: #fff;
            font-weight: bold;
            padding: 12px 18px 6px 18px;
            background: #333;
            border-top: 1px solid #444;
            border-bottom: none;
            margin-top: 2px;
            margin-bottom: 0;
            font-size: 1.08em;
        }
        .sidebar-submenu {
            list-style: none;
            margin: 0 0 0 0;
            padding: 0 0 0 18px;
            background: #444;
        }
        .sidebar-submenu li a {
            color: #fff;
            display: block;
            padding: 10px 0 10px 10px;
            text-decoration: none;
            font-size: 1em;
            border-bottom: 1px solid #555;
            transition: background 0.2s;
        }
        .sidebar-submenu li a:hover {
            background: #555;
        }

        .header {
            position: sticky;
            top: 0;
            z-index: 10;
            background: #fff;
            padding-top: 18px;
            padding-bottom: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.07);
        }

        /* Modal Overlay Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0,0,0,0.5);
            z-index: 2000;
            justify-content: center;
            align-items: center;
        }
        .modal.show {
            display: flex;
        }
        .modal-content {
            background: #fff;
            border-radius: 8px;
            padding: 30px 30px 20px 30px;
            max-width: 500px;
            width: 95vw;
            box-shadow: 0 8px 32px rgba(0,0,0,0.25);
            position: relative;
        }
        .close-button {
            position: absolute;
            top: 12px;
            right: 18px;
            font-size: 1.5em;
            color: #888;
            cursor: pointer;
        }
        @media (max-width: 600px) {
            .modal-content {
                padding: 18px 6px 10px 6px;
                max-width: 98vw;
            }
        }

        /* Custom Delete Confirmation Modal */
        .delete-confirmation-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .delete-confirmation-content {
            background-color: white;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            width: 90%;
            max-width: 400px;
            text-align: center;
            animation: fadeIn 0.3s ease-out;
        }

        .delete-confirmation-content h3 {
            color: #333;
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 1.5em;
        }

        .delete-confirmation-content p {
            color: #666;
            margin-bottom: 20px;
            font-size: 1.1em;
        }

        .delete-confirmation-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
        }

        .delete-confirmation-buttons button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s ease;
        }

        .delete-confirm-btn {
            background-color: #dc3545;
            color: white;
        }

        .delete-confirm-btn:hover {
            background-color: #c82333;
        }

        .delete-cancel-btn {
            background-color: #6c757d;
            color: white;
        }

        .delete-cancel-btn:hover {
            background-color: #5a6268;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: scale(0.95);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }
    </style>
</head>
<body>
    <!-- Custom Success/Error Popup -->
    <div id="customPopup" class="custom-popup">
        <div class="custom-popup-content">
            <span class="custom-popup-icon">âœ“</span>
            <span class="custom-popup-message"></span>
        </div>
    </div>

    <!-- Add Delete Confirmation Modal -->
    <div id="deleteConfirmationModal" class="delete-confirmation-modal">
        <div class="delete-confirmation-content">
            <h3>Delete Variation</h3>
            <p>Are you sure you want to delete this variation? This action cannot be undone.</p>
            <div class="delete-confirmation-buttons">
                <button class="delete-cancel-btn" id="cancelDelete">Cancel</button>
                <button class="delete-confirm-btn" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>

    <div class="dashboard-container">
        <div class="sidebar">
            <div class="sidebar-header">
                <h3>Transaction Manager Panel</h3>
            </div>
            <ul class="sidebar-menu">
                <li><a href="/Employee/TransactionManager">Dashboard</a></li>
                <li class="sidebar-section-label" style="font-weight:normal;">Inventory</li>
                <ul class="sidebar-submenu" style="display:block;">
                    <li><a href="/Employee/Transaction/TransacProducts">Products</a></li>
                    <li><a href="/Employee/Transaction/TransacVariations">Variations</a></li>
                    <li><a href="/Employee/Transaction/TransacMaterials">Raw Materials</a></li>
                    <li><a href="/Employee/Transaction/TransacAlerts">Alerts</a></li>
                    <li><a href="/Employee/Transaction/TransacArchived">Archived items</a></li>
                </ul>
                <li class="sidebar-section-label" style="font-weight:normal;">Transactions</li>
                <ul class="sidebar-submenu" style="display:block;">
                    <li><a href="/Employee/Transaction/TransacRates">Delivery Rates</a></li>
                    <li><a href="/Employee/Transaction/TransacWalkIn">Walk In</a></li>
                    <li><a href="/Employee/Transaction/OrdersPending">Orders Pending</a></li>
                    <li><a href="/Employee/Transaction/OrdersProcessing">Orders Processing</a></li>
                    <li><a href="/Employee/Transaction/OrdersShipping">Orders Shipping</a></li>
                    <li><a href="/Employee/Transaction/OrdersDelivery">Orders Delivery</a></li>
                    <li><a href="/Employee/Transaction/OrdersReceive">Orders Receive</a></li>
                    <li><a href="/Employee/Transaction/CancelledOrders">Cancelled Orders</a></li>
                    <li><a href="/Employee/Transaction/CompletedOrders">Completed Orders</a></li>
                </ul>
                <li><a href="/Employee/Transaction/TransacManUsers">Manage Users</a></li>
                <li><a href="/Employee/Transaction/TransacReviews">Reviews</a></li>
                <li><a href="/Employee/Transaction/TransacChatSupport">Chat Support</a></li>
                <li><a href="/Employee/Transaction/TransacCMS">Content Management</a></li>
                <li><a href="/Employee/Transaction/TransacLogs">Activity Logs</a></li>
            </ul>
        </div>

        <div class="main-content">
            <div class="header">
                <h2>All Products</h2>
            </div>
            <div class="content-area">
                <% if (locals.error && locals.error.length > 0) { %>
                    <div class="error-message"><%= error %></div>
                <% } %>
                <% if (locals.success && locals.success.length > 0) { %>
                    <div class="success-message"><%= success %></div>
                <% } %>

                <% if (products && products.length > 0) { %>
                    <table>
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% products.forEach(product => { %>
                                <tr>
                                    <td><%= product.ProductID %></td>
                                    <td>
                                        <% if (product.ImageURL) { %>
                                            <img src="<%= product.ImageURL %>" alt="<%= product.Name %>" style="width: 60px; height: 60px; object-fit: cover; border-radius: 4px;">
                                        <% } else { %>
                                            <div style="width: 60px; height: 60px; background-color: #f0f0f0; border-radius: 4px; display: flex; align-items: center; justify-content: center; color: #999;">
                                                No Image
                                            </div>
                                        <% } %>
                                    </td>
                                    <td><%= product.Name %></td>
                                    <td>$<%= parseFloat(product.Price).toFixed(2) %></td>
                <td>
                    <button class="add-variation-btn" 
                        data-product-id="<%= product.ProductID %>"
                        data-product-name="<%= product.Name %>"
                        title="Add Variation"
                        style="margin-right: 5px;"
                    >
                        Add Variation
                    </button>
                    <button class="view-variations-btn" 
                        data-product-id="<%= product.ProductID %>"
                        data-product-name="<%= product.Name %>"
                        title="View Variations"
                    >
                        View Variations
                    </button>
                </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                <% } else { %>
                    <p>No products found.</p>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Add Variation Modal -->
    <div id="addVariationModal" class="modal">
        <div class="modal-content">
            <span class="close-button" id="closeAddVariationModal">&times;</span>
            <h3>Add Product Variation</h3>
            <form id="addVariationForm" enctype="multipart/form-data">
                <input type="hidden" id="variationProductID" name="productID">
                
                <div style="margin-bottom: 15px;">
                    <label for="variationProductName" style="display: block; margin-bottom: 5px; font-weight: bold;">Product:</label>
                    <input type="text" id="variationProductName" readonly style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px; background-color: #f9f9f9;">
                </div>

                <div style="margin-bottom: 15px;">
                    <label for="variationName" style="display: block; margin-bottom: 5px; font-weight: bold;">Variation Name:</label>
                    <input type="text" id="variationName" name="variationName" required style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                </div>

                <div style="margin-bottom: 15px;">
                    <label for="variationColor" style="display: block; margin-bottom: 5px; font-weight: bold;">Color:</label>
                    <input type="text" id="variationColor" name="color" style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                </div>


                <div style="margin-bottom: 15px;">
                    <label for="variationQuantity" style="display: block; margin-bottom: 5px; font-weight: bold;">Quantity:</label>
                    <input type="number" id="variationQuantity" name="quantity" min="1" value="1" required style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                </div>

                <div style="margin-bottom: 20px;">
                    <label for="variationImage" style="display: block; margin-bottom: 5px; font-weight: bold;">Variation Image:</label>
                    <input type="file" id="variationImage" name="variationImage" accept="image/*" style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                </div>

                <div style="display: flex; gap: 10px; justify-content: flex-end;">
                    <button type="button" id="cancelAddVariation" style="padding: 10px 20px; background-color: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer;">Cancel</button>
                    <button type="submit" style="padding: 10px 20px; background-color: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer;">Add Variation</button>
                </div>
            </form>
    </div>
</div>

<!-- View Variations Modal -->
<div id="viewVariationsModal" class="modal">
    <div class="modal-content" style="max-width: 800px;">
        <span class="close-button" id="closeViewVariationsModal">&times;</span>
        <h3 id="viewVariationsTitle">Product Variations</h3>
        <div id="variationsTableContainer">
            <table id="variationsTable" style="width: 100%; border-collapse: collapse; margin-top: 20px;">
                <thead>
                    <tr style="background-color: #f8f9fa;">
                        <th style="padding: 12px; border: 1px solid #ddd; text-align: left;">Variation ID</th>
                        <th style="padding: 12px; border: 1px solid #ddd; text-align: left;">Variation Name</th>
                        <th style="padding: 12px; border: 1px solid #ddd; text-align: left;">Color</th>
                        <th style="padding: 12px; border: 1px solid #ddd; text-align: left;">Quantity</th>
                        <th style="padding: 12px; border: 1px solid #ddd; text-align: left;">Image</th>
                        <th style="padding: 12px; border: 1px solid #ddd; text-align: left;">Created Date</th>
                        <th style="padding: 12px; border: 1px solid #ddd; text-align: left;">Created By</th>
                        <th style="padding: 12px; border: 1px solid #ddd; text-align: left;">Actions</th>
                    </tr>
                </thead>
                <tbody id="variationsTableBody">
                    <!-- Variations will be populated here -->
                </tbody>
            </table>
        </div>
        <div id="noVariationsMessage" style="text-align: center; padding: 40px; color: #666; display: none;">
            <p>No variations found for this product.</p>
        </div>
        <div style="display: flex; gap: 10px; justify-content: flex-end; margin-top: 20px;">
            <button type="button" id="closeViewVariationsBtn" style="padding: 10px 20px; background-color: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer;">Close</button>
        </div>
    </div>
</div>

<!-- Edit Variation Modal -->
<div id="editVariationModal" class="modal">
    <div class="modal-content" style="max-width: 900px;">
        <span class="close-button" id="closeEditVariationModal">&times;</span>
        <h3 id="editVariationTitle">Edit Product Variation</h3>
        
        <form id="editVariationForm" enctype="multipart/form-data">
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
                <!-- Left Column -->
                <div>
                    <div style="margin-bottom: 15px;">
                        <label for="editVariationID" style="display: block; margin-bottom: 5px; font-weight: bold;">Variation ID:</label>
                        <input type="text" id="editVariationID" name="variationID" readonly style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px; background-color: #f5f5f5;">
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <label for="editVariationProductName" style="display: block; margin-bottom: 5px; font-weight: bold;">Product Name:</label>
                        <input type="text" id="editVariationProductName" name="productName" readonly style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px; background-color: #f5f5f5;">
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <label for="editVariationName" style="display: block; margin-bottom: 5px; font-weight: bold;">Variation Name: *</label>
                        <input type="text" id="editVariationName" name="variationName" required style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <label for="editVariationColor" style="display: block; margin-bottom: 5px; font-weight: bold;">Color:</label>
                        <input type="text" id="editVariationColor" name="color" style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                    </div>
                    
                </div>
                
                <!-- Right Column -->
                <div>
                    <div style="margin-bottom: 15px;">
                        <label for="editVariationQuantity" style="display: block; margin-bottom: 5px; font-weight: bold;">Quantity: *</label>
                        <input type="number" id="editVariationQuantity" name="quantity" min="0" required style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <label for="editVariationImage" style="display: block; margin-bottom: 5px; font-weight: bold;">Variation Image:</label>
                        <div style="display:flex; align-items:center; gap:12px;">
                            <img id="editVariationImagePreview" src="" alt="Variation Image" style="width: 60px; height: 60px; object-fit: cover; border-radius: 4px; border:1px solid #ddd; display:none;">
                            <input type="file" id="editVariationImage" name="variationImage" accept="image/*" style="flex:1; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                        </div>
                        <small style="color: #666; font-size: 12px;">Leave empty to keep current image</small>
                    </div>
                    
                    <div style="margin-bottom: 15px;">
                        <label for="editVariationIsActive" style="display: block; margin-bottom: 5px; font-weight: bold;">Status:</label>
                        <select id="editVariationIsActive" name="isActive" style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;">
                            <option value="1">Active</option>
                            <option value="0">Inactive</option>
                        </select>
                    </div>
                </div>
            </div>
            
            
            
            <div style="display: flex; gap: 10px; justify-content: flex-end; margin-top: 20px;">
                <button type="button" id="cancelEditVariation" style="padding: 10px 20px; background-color: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer;">Cancel</button>
                <button type="submit" style="padding: 10px 20px; background-color: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer;">Update Variation</button>
            </div>
        </form>
    </div>
</div>

<script>
        // Function to show custom popup
        function showCustomPopup(message, isError = false) {
            const popup = document.getElementById('customPopup');
            const popupMessage = popup.querySelector('.custom-popup-message');
            const popupIcon = popup.querySelector('.custom-popup-icon');

            // Set message and icon
            popupMessage.textContent = message;
            popupIcon.textContent = isError ? 'âœ•' : 'âœ“';
            
            // Set style based on type
            popup.className = 'custom-popup' + (isError ? ' error' : '');
            
            // Show popup
            popup.style.display = 'block';
            
            // Hide popup after 3 seconds
            setTimeout(() => {
                popup.classList.add('hide');
                setTimeout(() => {
                    popup.style.display = 'none';
                    popup.classList.remove('hide');
                }, 500);
            }, 3000);
        }

        // Add Variation Modal Logic
        const addVariationModal = document.getElementById('addVariationModal');
        const addVariationForm = document.getElementById('addVariationForm');
        const closeAddVariationModal = document.getElementById('closeAddVariationModal');
        const cancelAddVariation = document.getElementById('cancelAddVariation');

        // Add event listeners to all "Add Variation" buttons
        document.querySelectorAll('.add-variation-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
                const productName = this.getAttribute('data-product-name');
                
                // Populate modal with product information
                document.getElementById('variationProductID').value = productId;
                document.getElementById('variationProductName').value = productName;
                
                // Reset form
                addVariationForm.reset();
                document.getElementById('variationProductID').value = productId;
                document.getElementById('variationProductName').value = productName;
                document.getElementById('variationQuantity').value = 1;
                
                // Show modal
                addVariationModal.classList.add('show');
            });
        });

        // Close modal handlers
        closeAddVariationModal.addEventListener('click', function() {
            addVariationModal.classList.remove('show');
        });

        cancelAddVariation.addEventListener('click', function() {
            addVariationModal.classList.remove('show');
        });

        // Close modal when clicking outside
        window.addEventListener('click', function(event) {
            if (event.target === addVariationModal) {
                addVariationModal.classList.remove('show');
            }
        });

        // Form submission
        addVariationForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            
            fetch('/Employee/Transaction/TransacVariations/Add', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showCustomPopup(data.message);
                    addVariationModal.classList.remove('show');
                    // Optionally refresh the page or update the UI
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    showCustomPopup(data.message, true);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showCustomPopup('An error occurred while adding the variation', true);
            });
        });

        // View Variations Modal Logic
        const viewVariationsModal = document.getElementById('viewVariationsModal');
        const closeViewVariationsModal = document.getElementById('closeViewVariationsModal');
        const closeViewVariationsBtn = document.getElementById('closeViewVariationsBtn');

        // Add event listeners to all "View Variations" buttons
        document.querySelectorAll('.view-variations-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
                const productName = this.getAttribute('data-product-name');
                
                // Update modal title
                document.getElementById('viewVariationsTitle').textContent = `Variations for: ${productName}`;
                
                // Show loading state
                document.getElementById('variationsTableContainer').style.display = 'none';
                document.getElementById('noVariationsMessage').style.display = 'none';
                
                // Fetch variations for this product
                fetch(`/Employee/Transaction/TransacVariations/Get/${productId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success && data.variations && data.variations.length > 0) {
                            populateVariationsTable(data.variations);
                            document.getElementById('variationsTableContainer').style.display = 'block';
                        } else {
                            document.getElementById('noVariationsMessage').style.display = 'block';
                        }
                    })
                    .catch(error => {
                        console.error('Error fetching variations:', error);
                        document.getElementById('noVariationsMessage').style.display = 'block';
                    });
                
                // Show modal
                viewVariationsModal.classList.add('show');
            });
        });

        // Function to populate variations table
        function populateVariationsTable(variations) {
            const tbody = document.getElementById('variationsTableBody');
            tbody.innerHTML = '';
            
            variations.forEach(variation => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td style="padding: 12px; border: 1px solid #ddd;">${variation.VariationID}</td>
                    <td style="padding: 12px; border: 1px solid #ddd;">${variation.VariationName}</td>
                    <td style="padding: 12px; border: 1px solid #ddd;">${variation.Color || 'N/A'}</td>
                    <td style="padding: 12px; border: 1px solid #ddd;">${variation.Quantity}</td>
                    <td style="padding: 12px; border: 1px solid #ddd;">
                        ${variation.VariationImageURL ? 
                            `<img src="${variation.VariationImageURL}" alt="Variation Image" style="width: 50px; height: 50px; object-fit: cover; border-radius: 4px;">` : 
                            'No Image'
                        }
                    </td>
                    <td style="padding: 12px; border: 1px solid #ddd;">${new Date(variation.CreatedAt).toLocaleDateString()}</td>
                    <td style="padding: 12px; border: 1px solid #ddd;">${variation.CreatedByUser || 'N/A'}</td>
                    <td style="padding: 12px; border: 1px solid #ddd;">
                        <button class="edit-variation-btn" 
                                data-variation-id="${variation.VariationID}"
                                data-product-id="${variation.ProductID}"
                                data-product-name="${variation.ProductName}"
                                data-variation-name="${variation.VariationName}"
                                data-color="${variation.Color || ''}"
                                data-quantity="${variation.Quantity}"
                                data-image-url="${variation.VariationImageURL || ''}"
                                data-is-active="${variation.IsActive}"
                                style="padding: 6px 12px; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 12px;">
                            Edit
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });
            
            // Add event listeners to edit buttons
            document.querySelectorAll('.edit-variation-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    openEditVariationModal(this);
                });
            });
        }

        // Close modal handlers
        closeViewVariationsModal.addEventListener('click', function() {
            viewVariationsModal.classList.remove('show');
        });

        closeViewVariationsBtn.addEventListener('click', function() {
            viewVariationsModal.classList.remove('show');
        });

        // Close modal when clicking outside
        window.addEventListener('click', function(event) {
            if (event.target === viewVariationsModal) {
                viewVariationsModal.classList.remove('show');
            }
            if (event.target === editVariationModal) {
                editVariationModal.classList.remove('show');
            }
        });

        // Edit Variation Modal Logic
        const editVariationModal = document.getElementById('editVariationModal');
        const editVariationForm = document.getElementById('editVariationForm');
        const closeEditVariationModal = document.getElementById('closeEditVariationModal');
        const cancelEditVariation = document.getElementById('cancelEditVariation');
        

        // Function to open edit variation modal
        function openEditVariationModal(button) {
            // Populate form with variation data
            document.getElementById('editVariationID').value = button.getAttribute('data-variation-id');
            document.getElementById('editVariationProductName').value = button.getAttribute('data-product-name');
            document.getElementById('editVariationName').value = button.getAttribute('data-variation-name');
            document.getElementById('editVariationColor').value = button.getAttribute('data-color');
            document.getElementById('editVariationQuantity').value = button.getAttribute('data-quantity');
            document.getElementById('editVariationIsActive').value = button.getAttribute('data-is-active');
            const imageUrl = button.getAttribute('data-image-url');
            const preview = document.getElementById('editVariationImagePreview');
            if (imageUrl) {
                preview.src = imageUrl;
                preview.style.display = 'inline-block';
            } else {
                preview.src = '';
                preview.style.display = 'none';
            }
            
            // Show modal
            editVariationModal.classList.add('show');
        }

        // Close modal handlers
        closeEditVariationModal.addEventListener('click', function() {
            editVariationModal.classList.remove('show');
        });

        cancelEditVariation.addEventListener('click', function() {
            editVariationModal.classList.remove('show');
        });

        

        // Edit variation form submission
        editVariationForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const variationId = formData.get('variationID');
            const additionalQuantity = 0; // materials and add quantity removed; direct quantity update
            
            // Show loading state
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.textContent;
            submitBtn.textContent = 'Updating...';
            submitBtn.disabled = true;
            
            // Submit form
            fetch('/Employee/Transaction/TransacVariations/Edit', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showCustomPopup(data.message || 'Variation updated successfully!');
                    
                    editVariationModal.classList.remove('show');
                } else {
                    console.error('Variation update failed:', { message: data.message, data });
                    showCustomPopup(data.message || 'Failed to update variation', true);
                }
            })
            .catch(error => {
                console.error('Error updating variation:', error);
                showCustomPopup('Failed to update variation', true);
            })
            .finally(() => {
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
            });
        });

        // Preview file selection for variation image
        document.getElementById('editVariationImage').addEventListener('change', function(e) {
            const file = e.target.files && e.target.files[0];
            const preview = document.getElementById('editVariationImagePreview');
            if (file) {
                const url = URL.createObjectURL(file);
                preview.src = url;
                preview.style.display = 'inline-block';
            }
        });
    </script>
    <% if (locals.error && locals.error.length > 0) { %>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            showCustomPopup('<%= error %>', true);
        });
    </script>
    <% } %>
    <% if (locals.success && locals.success.length > 0) { %>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            showCustomPopup('<%= success %>');
        });
    </script>
    <% } %>
</body>
</html>
