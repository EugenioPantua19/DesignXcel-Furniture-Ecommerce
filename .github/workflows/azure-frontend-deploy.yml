name: Deploy Frontend to Azure Static Web Apps

on:
  push:
    branches: [ main, develop ]
    paths: [ 'frontend/**' ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]
    paths: [ 'frontend/**' ]
  workflow_dispatch:

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run tests
        run: |
          cd frontend
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm test -- --coverage --watchAll=false
          else
            echo "No tests found, skipping test step"
          fi

      - name: Build application
        run: |
          cd frontend
          npm run build:prod
        env:
          # Production environment variables
          REACT_APP_API_URL: https://designxcel-api.azurewebsites.net
          REACT_APP_WEBSOCKET_URL: https://designxcel-api.azurewebsites.net
          REACT_APP_ENABLE_3D_CONFIGURATOR: true
          REACT_APP_ENABLE_REAL_TIME_UPDATES: true
          REACT_APP_ENABLE_ADMIN_DASHBOARD: true
          REACT_APP_ENABLE_PAYMENT_PROCESSING: true
          REACT_APP_ENVIRONMENT: production

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/frontend"
          output_location: "build"
          skip_app_build: true

      - name: 'Health Check'
        if: success()
        run: |
          sleep 30
          # Extract the URL from the deployment output
          STATIC_WEB_APP_URL="${{ steps.builddeploy.outputs.static_web_app_url }}"
          if [ -n "$STATIC_WEB_APP_URL" ]; then
            curl -f "$STATIC_WEB_APP_URL" || exit 1
            echo "‚úÖ Frontend health check passed!"
            echo "üåê URL: $STATIC_WEB_APP_URL"
          else
            echo "‚ö†Ô∏è Could not determine Static Web App URL for health check"
          fi

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
